# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master
- staging

# Pull Request
pr:
- none

pool:
  vmImage: 'ubuntu-latest'

variables:

  # Azure Resource Manager Service Principal Authentication
  ConnectionName: "Pay-As-You-Go"

  # The name of an existing storage account within the Azure subscription
  ResourceManagerName: "storenvw7kd6cbvlia"

  # The name of the Azure blob container to which the files will be copied
  ResourceManagerContainerName: "$web"

  BuildApi: false
  BuildFrontend: false
  GoodDeveloper: false

steps:
- task: PowerShell@2
  inputs:
    filePath: 'SetProjectVars.ps1'

- script: echo $(BuildFrontend)
  name: echovar

- task: Npm@1
  inputs:
    command: 'install'
    workingDir: './Frontend'
  displayName: 'Perform npm install'
  condition: and(succeeded(), eq(variables['BuildFrontend'], 'True'))

- task: Npm@1
  inputs:
    command: 'custom'
    workingDir: './Frontend'
    customCommand: 'build'
  displayName: 'Perform npm build'
  condition: and(succeeded(), eq(variables['BuildFrontend'], 'True'))

- task: AzureFileCopy@3
  inputs:
    SourcePath: 'Frontend/dist'
    azureSubscription: $(ConnectionName)
    Destination: 'AzureBlob'
    storage: $(ResourceManagerName)
    ContainerName: $(ResourceManagerContainerName)
  condition: and(succeeded(), eq(variables['BuildFrontend'], 'True'))

- task: DotNetCoreCLI@2
  inputs:
    command: 'build'
    projects: 'Api/*.fsproj'
    workingDirectory: 'Api'
    configuration: 'Release'
    versioningScheme: byBuildNumber
  condition: and(succeeded(), eq(variables['BuildApi'], 'True'))
